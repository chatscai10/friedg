rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o { // {bucket} is a variable for your default bucket name

    // Default rule: Deny all reads and writes if no other more specific rules match.
    match /{allPaths=**} {
      allow read, write: if false;
    }

    // --- Menu Item Images ---
    // Path: menu_items/{tenantId}/{itemId}/{imageFileName}
    // tenantId: Helps in organizing data per tenant if applicable.
    // itemId: Unique ID of the menu item.
    // imageFileName: Original name or a generated UUID for the image.
    match /menu_items/{tenantId}/{itemId}/{imageFileName} {
      // Allow public read for anyone (customers browsing menu).
      allow get; // Equivalent to allow read: if true;

      // Allow write (create, update, delete) only by authenticated users
      // who have 'admin' or 'store_manager' role AND belong to the tenantId in the path.
      // Assumes 'tenant_id' and 'role' are in custom claims of the auth token.
      allow write: if request.auth != null &&
                     request.auth.token.tenant_id == tenantId &&
                     (request.auth.token.role == 'admin' || request.auth.token.role == 'store_manager') &&
                     request.resource.size < 5 * 1024 * 1024 && // Max 5MB
                     request.resource.contentType.matches('image/.*'); // Only allow image types
    }

    // Placeholder for other rules (e.g., employee_photos, customer_uploads)
    // match /employee_photos/{tenantId}/{employeeId}/profile.{ext} { ... }
    // match /customer_pwa_uploads/{userId}/avatar.{ext} { ... }
  }
} 